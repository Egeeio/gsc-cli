{
  "version": 3,
  "file": "install.js",
  "sourceRoot": "../..",
  "sources": [
    "src/commands/install.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs                 = require(\"fs\")\nChalk              = require(\"chalk\")\nGameServer         = require(\"../server_builder\")\n{ Command, flags } = require('@oclif/command')\n{ execSync }       = require 'child_process'\n\nclass InstallCommand extends Command\n  configParser: (flags) ->\n    jsonConfig = JSON.parse(fs.readFileSync(flags.file))\n    flags.config = jsonConfig\n    flags.path = \"/home/#{flags.config.meta.user}/#{flags.config.meta.game}-server\"\n    this.log \"server will be installed to #{flags.path}\"\n    execSync(\"mkdir -p /home/#{flags.config.meta.user}/.config/systemd/user\")\n  flagParser: (flags) ->\n    if flags.file && flags.name\n      this.log(Chalk.red.bold(\"Using -f and -n flags together is not supported. Use one or the other.\"))\n      process.exit()\n    else if flags.name\n      execSync(\"gsd-cli bootstrap -n #{flags.name}\")\n      flags.file = \"#{process.env.PWD}/#{flags.name}.json\"\n      this.log(Chalk.blue(\"Created '#{flags.name}' config file at: #{process.env.PWD}/#{flags.file}\"))\n    try\n      jsonConfig = this.configParser(flags)\n    catch e\n      this.log(Chalk.red.bold(\"Error parsing config file: #{e}\"))\n      process.exit()\n    return jsonConfig\n  run: ->\n    { flags } = this.parse(InstallCommand)\n    this.flagParser(flags)\n    GameServer.install(flags)\n\nInstallCommand.description = \"Installs a dedicated game server using a config file or a name with default settings.\"\n\nInstallCommand.flags = {\n  name:   flags.string( {char: 'n', description: 'name of the server to install'}),\n  file:   flags.string( {char: 'f', description: 'path to the config file'}),\n  dryrun: flags.boolean({char: 'd', description: 'test installing a server without actually installing it'}),\n}\n\nmodule.exports = InstallCommand\n"
  ]
}