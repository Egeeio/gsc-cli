{
  "version": 3,
  "file": "bootstrap.js",
  "sourceRoot": "../..",
  "sources": [
    "src/commands/bootstrap.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,gBAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,EAAA;;EAAA,EAAA,GAAqB,OAAA,CAAQ,IAAR,CAAa,CAAC;;EACnC,KAAA,GAAqB,OAAA,CAAQ,OAAR;;EACrB,UAAA,GAAqB,OAAA,CAAQ,mBAAR;;EACrB,CAAA,CAAE,OAAF,EAAW,KAAX,CAAA,GAAqB,OAAA,CAAQ,gBAAR,CAArB;;EACA,CAAA,CAAE,QAAF,EAAY,IAAZ,EAAkB,KAAlB,CAAA,GAAkC,OAAA,CAAQ,eAAR,CAAlC;;EAEM;;;IAAN,MAAA,iBAAA,QAA+B,QAA/B;MAUE,YAAc,CAAA,CAAA;QACZ,QAAA,CAAS,CAAA,OAAA,CAAA,CAAU,OAAV,CAAA,CAAT;eACA,QAAA,CAAS,CAAA,mDAAA,CAAA,CAAsD,OAAtD,CAA8D,QAA9D,CAAT;MAFY;;MAGd,eAAiB,CAAC,IAAD,CAAA;AACf,YAAA;QAAA,QAAA,GAAW,CAAA,CAAA,CAAG,OAAH,CAAW,CAAX,CAAA,CAAc,UAAW,CAAA,IAAA,CAAzB,CAAA;QAEX,QAAA,CAAS,CAAA,oBAAA,CAAA,CAAwB,OAAO,CAAC,GAAG,CAAC,IAApC,CAAyC,GAAzC,CAAA,CAA+C,QAA/C,CAAA,CAAT;QACA,QAAA,CAAS,CAAA,MAAA,CAAA,CAAS,QAAT,EAAA,CAAA,CAAqB,OAAO,CAAC,GAAG,CAAC,GAAjC,CAAA,CAAT;eACA,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,IAAN,CAAW,CAAA,SAAA,CAAA,CAAY,KAAK,CAAC,IAAlB,CAAuB,kBAAvB,CAAA,CAA2C,OAAO,CAAC,GAAG,CAAC,GAAvD,CAA2D,CAA3D,CAAA,CAA8D,KAAK,CAAC,IAApE,CAAyE,KAAzE,CAAX,CAAT;MALe;;MAMjB,GAAK,CAAA,CAAA;QACH,CAAA,CAAE,KAAF,CAAA,GAAY,IAAI,CAAC,KAAL,CAAW,gBAAX,CAAZ;QAEA,IAAG,UAAW,CAAA,KAAK,CAAC,IAAN,CAAd;UACE,IAAI,CAAC,YAAL,CAAA;iBACA,IAAI,CAAC,eAAL,CAAqB,KAAK,CAAC,IAA3B,EAFF;SAAA,MAAA;UAIE,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe,CAAA,gBAAA,CAAA,CAAmB,KAAK,CAAC,IAAzB,CAA8B,0BAA9B,CAAf,CAAT;iBACA,OAAO,CAAC,IAAR,CAAA,EALF;;MAHG;;IAnBP;;IACE,OAAA,GAAU;;IACV,UAAA,GAAa;MACX,IAAA,EAAM,WADK;MAEX,SAAA,EAAW,gBAFA;MAGX,IAAA,EAAM,WAHK;MAIX,IAAA,EAAM,WAJK;MAKX,GAAA,EAAK,UALM;MAMX,GAAA,EAAK;IANM;;;;;;EA2Bf,gBAAgB,CAAC,WAAjB,GAA+B;;EAE/B,gBAAgB,CAAC,KAAjB,GAAyB;IACvB,IAAA,EAAQ,KAAK,CAAC,MAAN,CAAc;MAAC,IAAA,EAAM,GAAP;MAAY,WAAA,EAAa;IAAzB,CAAd;EADe;;EAIzB,MAAM,CAAC,OAAP,GAAiB;AAzCjB",
  "sourcesContent": [
    "fs                 = require(\"fs\").promises\nChalk              = require(\"chalk\")\nGameServer         = require(\"../server_builder\")\n{ Command, flags } = require('@oclif/command')\n{ execSync, exec, spawn }       = require 'child_process'\n\nclass BootstrapCommand extends Command\n  tmpPath = \"/tmp/gsd-config\"\n  gameLookup = {\n    gmod: 'gmod.json',\n    minecraft: 'minecraft.json',\n    rust: 'rust.json',\n    sdtd: 'sdtd.json',\n    tf2: 'tf2.json',\n    scp: 'scp.json'\n  }\n  downloadFile: () ->\n    execSync(\"rm -rf #{tmpPath}\")\n    execSync(\"git clone https://github.com/Egeeio/gsd-config.git #{tmpPath} --quiet\")\n  transformConfig: (name) ->\n    filePath = \"#{tmpPath}/#{gameLookup[name]}\"\n\n    execSync(\"sed -i \\\"s/USER_NAME/#{process.env.USER}/\\\" #{filePath}\")\n    execSync(\"cp -f #{filePath} #{process.env.PWD}\")\n    this.log(Chalk.blue(\"Created '#{flags.name}' config file at: #{process.env.PWD}/#{flags.name}.json\"))\n  run: ->\n    { flags } = this.parse(BootstrapCommand)\n\n    if gameLookup[flags.name]\n      this.downloadFile()\n      this.transformConfig(flags.name)\n    else\n      this.log(Chalk.red.bold(\"Unable to find '#{flags.name}' in supported games list.\"))\n      process.exit()\n\nBootstrapCommand.description = \"Creates a default gsd game configuration file and places it in the current directory.\"\n\nBootstrapCommand.flags = {\n  name:   flags.string( {char: 'n', description: 'name of the server to to pull configs for'})\n}\n\nmodule.exports = BootstrapCommand\n"
  ]
}