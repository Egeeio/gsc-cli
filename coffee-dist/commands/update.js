// Generated by CoffeeScript 2.4.1
(function() {
  var Chalk, Command, GameServer, UpdateCommand, execSync, flags, fs;

  fs = require("fs");

  Chalk = require("chalk");

  GameServer = require("../server_builder");

  ({Command, flags} = require('@oclif/command'));

  ({execSync} = require('child_process'));

  UpdateCommand = class UpdateCommand extends Command {
    run() {
      var e, jsonConfig;
      ({flags} = this.parse(UpdateCommand));
      if (!flags.path) {
        flags.path = `/home/${process.env.USER}/${flags.name}-server`;
        this.log(`Path was not provided; defaulting to ${flags.path}`);
        try {
          execSync(`stat ${flags.path}`);
        } catch (error) {
          e = error;
          this.error(Chalk.red.bold(`Error parsing install path: ${e}`));
          process.exit;
        }
      }
      jsonConfig = JSON.parse(fs.readFileSync(`${flags.path}/cache.json`));
      flags = jsonConfig;
      return GameServer.install(flags);
    }

  };

  UpdateCommand.description = "Updates an installed dedicated game server";

  UpdateCommand.flags = {
    name: flags.string({
      char: 'n',
      description: 'game server to update'
    }),
    path: flags.string({
      char: 'p',
      description: 'path the game server is installed at'
    })
  };

  module.exports = UpdateCommand;

}).call(this);

//# sourceMappingURL=update.js.map
