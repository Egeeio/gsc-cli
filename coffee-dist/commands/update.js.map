{
  "version": 3,
  "file": "update.js",
  "sourceRoot": "../..",
  "sources": [
    "src/commands/update.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,QAAA,EAAA,KAAA,EAAA;;EAAA,EAAA,GAAqB,OAAA,CAAQ,IAAR;;EACrB,KAAA,GAAqB,OAAA,CAAQ,OAAR;;EACrB,UAAA,GAAqB,OAAA,CAAQ,mBAAR;;EACrB,CAAA,CAAE,OAAF,EAAW,KAAX,CAAA,GAAqB,OAAA,CAAQ,gBAAR,CAArB;;EACA,CAAA,CAAE,QAAF,CAAA,GAAqB,OAAA,CAAQ,eAAR,CAArB;;EAEM,gBAAN,MAAA,cAAA,QAA4B,QAA5B;IACE,GAAK,CAAA,CAAA;AACH,UAAA,CAAA,EAAA;MAAA,CAAA,CAAE,KAAF,CAAA,GAAY,IAAI,CAAC,KAAL,CAAW,aAAX,CAAZ;MACA,IAAG,CAAC,KAAK,CAAC,IAAV;QACE,KAAK,CAAC,IAAN,GAAa,CAAA,MAAA,CAAA,CAAS,OAAO,CAAC,GAAG,CAAC,IAArB,CAA0B,CAA1B,CAAA,CAA6B,KAAK,CAAC,IAAnC,CAAwC,OAAxC;QACb,IAAI,CAAC,GAAL,CAAS,CAAA,qCAAA,CAAA,CAAwC,KAAK,CAAC,IAA9C,CAAA,CAAT;AACA;UACE,QAAA,CAAS,CAAA,KAAA,CAAA,CAAQ,KAAK,CAAC,IAAd,CAAA,CAAT,EADF;SAAA,aAAA;UAEM;UACJ,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe,CAAA,4BAAA,CAAA,CAA+B,CAA/B,CAAA,CAAf,CAAX;UACA,OAAO,CAAC,KAJV;SAHF;;MAQA,UAAA,GAAa,IAAI,CAAC,KAAL,CAAW,EAAE,CAAC,YAAH,CAAgB,CAAA,CAAA,CAAG,KAAK,CAAC,IAAT,CAAc,WAAd,CAAhB,CAAX;MACb,KAAA,GAAQ;aACR,UAAU,CAAC,OAAX,CAAmB,KAAnB;IAZG;;EADP;;EAgBA,aAAa,CAAC,WAAd,GAA4B;;EAE5B,aAAa,CAAC,KAAd,GAAsB;IACpB,IAAA,EAAM,KAAK,CAAC,MAAN,CAAa;MAAC,IAAA,EAAM,GAAP;MAAY,WAAA,EAAa;IAAzB,CAAb,CADc;IAEpB,IAAA,EAAM,KAAK,CAAC,MAAN,CAAa;MAAC,IAAA,EAAM,GAAP;MAAY,WAAA,EAAa;IAAzB,CAAb;EAFc;;EAKtB,MAAM,CAAC,OAAP,GAAiB;AA7BjB",
  "sourcesContent": [
    "fs                 = require(\"fs\")\nChalk              = require(\"chalk\")\nGameServer         = require(\"../server_builder\")\n{ Command, flags } = require('@oclif/command')\n{ execSync }       = require 'child_process'\n\nclass UpdateCommand extends Command\n  run: ->\n    { flags } = this.parse(UpdateCommand)\n    if !flags.path\n      flags.path = \"/home/#{process.env.USER}/#{flags.name}-server\"\n      this.log(\"Path was not provided; defaulting to #{flags.path}\")\n      try\n        execSync(\"stat #{flags.path}\")\n      catch e\n        this.error(Chalk.red.bold(\"Error parsing install path: #{e}\"))\n        process.exit\n    jsonConfig = JSON.parse(fs.readFileSync(\"#{flags.path}/cache.json\"))\n    flags = jsonConfig\n    GameServer.install(flags)\n\n\nUpdateCommand.description = \"Updates an installed dedicated game server\"\n\nUpdateCommand.flags = {\n  name: flags.string({char: 'n', description: 'game server to update'}),\n  path: flags.string({char: 'p', description: 'path the game server is installed at'}),\n}\n\nmodule.exports = UpdateCommand\n"
  ]
}