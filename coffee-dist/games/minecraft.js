// Generated by CoffeeScript 2.4.1
(function() {
  var Chalk, GenericServer, Minecraft, execSync;

  Chalk = require("chalk");

  GenericServer = require("./generic");

  ({execSync} = require("child_process"));

  Minecraft = class Minecraft extends GenericServer {
    static install(flags) {
      super.install(flags);
      console.log(Chalk.blue.bold("Running Spigot BuildTools.jar. This will take a while... ⏳"));
      if (flags.dryrun !== true) {
        this.downloadBuildTools(flags);
      }
      if (flags.dryrun !== true) {
        console.log(execSync("java -Xmx1024M -jar BuildTools.jar", {
          "cwd": `${flags.path}`
        }).toString());
      }
      this.createUnitFile(flags);
      this.createLaunchScript(flags);
      return this.postInstall(flags);
    }

    static createUnitFile(flags) {
      return super.createUnitFile(flags);
    }

    static createLaunchScript(flags) {
      var launchFileContents;
      launchFileContents = `java ${flags.config.javaParams} -jar ${flags.path}/spigot-${flags.config.version}.jar --noconsole`;
      return super.createLaunchScript(flags, launchFileContents);
    }

    static createLogFile(flags) {
      return super.createLogFile(flags);
    }

    static backupFile(file) {
      return super.backupFile(file);
    }

    static downloadBuildTools(flags) {
      var buildToolsUrl;
      buildToolsUrl = "https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar";
      execSync("rm -f BuildTools.jar", {
        "cwd": `${flags.path}`
      });
      return execSync(`wget ${buildToolsUrl}`, {
        "cwd": `${flags.path}`
      });
    }

    static postInstall(flags) {
      execSync(`rm -f ${flags.path}/eula.txt`);
      execSync(`touch ${flags.path}/eula.txt`);
      return execSync(`echo 'eula=true' >> ${flags.path}/eula.txt`);
    }

  };

  module.exports = Minecraft;

}).call(this);

//# sourceMappingURL=minecraft.js.map
