{
  "version": 3,
  "file": "generic.js",
  "sourceRoot": "../..",
  "sources": [
    "src/games/generic.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs           = require(\"fs\")\nChalk        = require(\"chalk\")\n{ execSync } = require(\"child_process\")\n\nclass GenericServer\n  @install: (flags) ->\n    console.info(Chalk.blue.bold(\"Installing, please wait... ⏳\"))\n    execSync(\"mkdir -p /home/#{flags.config.meta.user}/#{flags.config.meta.game}-server\")\n    this.createCache(flags)\n  @createUnitFile: (flags) ->\n    unit_path = \"/home/#{flags.config.meta.user}/.config/systemd/user/#{flags.config.meta.game}.service\"\n    unitFileContents = \"\"\"\n                       [Unit]\n                       After=network.target\n                       Description=Daemon for #{flags.config.meta.game} dedicated server\n                       [Install]\n                       WantedBy=default.target\n                       [Service]\n                       Type=simple\n                       WorkingDirectory=#{flags.path}\n                       ExecStart=/bin/bash #{flags.path}/launch.sh\n                       \"\"\"\n    execSync(\"rm -f #{unit_path}\")\n    execSync(\"touch #{unit_path}\")\n    execSync(\"echo '#{unitFileContents}' >> #{unit_path}\")\n  @createLaunchScript: (flags, launchFileContents) ->\n    logFilePath = \"#{flags.path}/console.log\"\n    launchFilePath = \"#{flags.path}/launch.sh\"\n    this.backupFile(launchFilePath)\n    execSync(\"rm -f #{launchFilePath}\")\n    execSync(\"touch #{launchFilePath}\")\n    execSync(\"echo '#{launchFileContents}' >> #{launchFilePath}\")\n    execSync(\"chmod +x #{launchFilePath}\")\n  @createLogFile: (flags) ->\n    execSync(\"touch #{flags.path}/console.log\")\n  @backupFile: (file) ->\n    execSync(\"touch #{file}\")\n    execSync(\"rm -f #{file}.backup\")\n    execSync(\"mv #{file} #{file}.backup\")\n  @createCache: (flags) ->\n    fs.writeFile \"#{flags.path}/cache.json\", JSON.stringify(flags), (err) =>\n      throw err if err\nmodule.exports = GenericServer\n"
  ]
}